// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.google.android.diskusage.proto;

@SuppressWarnings("hiding")
public final class Dump extends
    com.google.protobuf.nano.MessageNano {

  private static volatile Dump[] _emptyArray;
  public static Dump[] emptyArray() {
    // Lazily initializes the empty array
    if (_emptyArray == null) {
      synchronized (
          com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
        if (_emptyArray == null) {
          _emptyArray = new Dump[0];
        }
      }
    }
    return _emptyArray;
  }

  // optional string version = 1;
  public java.lang.String version;

  // optional int32 version_int = 2;
  public int versionInt;

  // optional int32 android_version = 3;
  public int androidVersion;

  // optional .PortableStreamProto proc = 4;
  public com.google.android.diskusage.proto.PortableStreamProto proc;

  // repeated .AppInfoProto app_info = 5;
  public com.google.android.diskusage.proto.AppInfoProto[] appInfo;

  // repeated .StatFsProto stat_fs = 6;
  public com.google.android.diskusage.proto.StatFsProto[] statFs;

  // optional .PortableFileProto external_files_dir = 8;
  public com.google.android.diskusage.proto.PortableFileProto externalFilesDir;

  // repeated .PortableFileProto external_files_dirs = 9;
  public com.google.android.diskusage.proto.PortableFileProto[] externalFilesDirs;

  // optional .PortableFileProto external_storage_directory = 10;
  public com.google.android.diskusage.proto.PortableFileProto externalStorageDirectory;

  // optional bool is_device_rooted = 11;
  public boolean isDeviceRooted;

  // repeated .NativeScanProto native_scan = 12;
  public com.google.android.diskusage.proto.NativeScanProto[] nativeScan;

  // optional .LegacyScan legacy_scan = 13;
  public com.google.android.diskusage.proto.LegacyScan legacyScan;

  public Dump() {
    clear();
  }

  public Dump clear() {
    version = "";
    versionInt = 0;
    androidVersion = 0;
    proc = null;
    appInfo = com.google.android.diskusage.proto.AppInfoProto.emptyArray();
    statFs = com.google.android.diskusage.proto.StatFsProto.emptyArray();
    externalFilesDir = null;
    externalFilesDirs = com.google.android.diskusage.proto.PortableFileProto.emptyArray();
    externalStorageDirectory = null;
    isDeviceRooted = false;
    nativeScan = com.google.android.diskusage.proto.NativeScanProto.emptyArray();
    legacyScan = null;
    cachedSize = -1;
    return this;
  }

  @Override
  public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
      throws java.io.IOException {
    if (!this.version.equals("")) {
      output.writeString(1, this.version);
    }
    if (this.versionInt != 0) {
      output.writeInt32(2, this.versionInt);
    }
    if (this.androidVersion != 0) {
      output.writeInt32(3, this.androidVersion);
    }
    if (this.proc != null) {
      output.writeMessage(4, this.proc);
    }
    if (this.appInfo != null && this.appInfo.length > 0) {
      for (AppInfoProto element : this.appInfo) {
        if (element != null) {
          output.writeMessage(5, element);
        }
      }
    }
    if (this.statFs != null && this.statFs.length > 0) {
      for (StatFsProto element : this.statFs) {
        if (element != null) {
          output.writeMessage(6, element);
        }
      }
    }
    if (this.externalFilesDir != null) {
      output.writeMessage(8, this.externalFilesDir);
    }
    if (this.externalFilesDirs != null && this.externalFilesDirs.length > 0) {
      for (PortableFileProto element : this.externalFilesDirs) {
        if (element != null) {
          output.writeMessage(9, element);
        }
      }
    }
    if (this.externalStorageDirectory != null) {
      output.writeMessage(10, this.externalStorageDirectory);
    }
    if (this.isDeviceRooted) {
      output.writeBool(11, true);
    }
    if (this.nativeScan != null && this.nativeScan.length > 0) {
      for (NativeScanProto element : this.nativeScan) {
        if (element != null) {
          output.writeMessage(12, element);
        }
      }
    }
    if (this.legacyScan != null) {
      output.writeMessage(13, this.legacyScan);
    }
    super.writeTo(output);
  }

  @Override
  protected int computeSerializedSize() {
    int size = super.computeSerializedSize();
    if (!this.version.equals("")) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(1, this.version);
    }
    if (this.versionInt != 0) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(2, this.versionInt);
    }
    if (this.androidVersion != 0) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(3, this.androidVersion);
    }
    if (this.proc != null) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeMessageSize(4, this.proc);
    }
    if (this.appInfo != null && this.appInfo.length > 0) {
      for (AppInfoProto element : this.appInfo) {
        if (element != null) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeMessageSize(5, element);
        }
      }
    }
    if (this.statFs != null && this.statFs.length > 0) {
      for (StatFsProto element : this.statFs) {
        if (element != null) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeMessageSize(6, element);
        }
      }
    }
    if (this.externalFilesDir != null) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeMessageSize(8, this.externalFilesDir);
    }
    if (this.externalFilesDirs != null && this.externalFilesDirs.length > 0) {
      for (PortableFileProto element : this.externalFilesDirs) {
        if (element != null) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeMessageSize(9, element);
        }
      }
    }
    if (this.externalStorageDirectory != null) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeMessageSize(10, this.externalStorageDirectory);
    }
    if (this.isDeviceRooted) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeBoolSize(11, true);
    }
    if (this.nativeScan != null && this.nativeScan.length > 0) {
      for (NativeScanProto element : this.nativeScan) {
        if (element != null) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeMessageSize(12, element);
        }
      }
    }
    if (this.legacyScan != null) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeMessageSize(13, this.legacyScan);
    }
    return size;
  }

  @Override
  public Dump mergeFrom(
          com.google.protobuf.nano.CodedInputByteBufferNano input)
      throws java.io.IOException {
    while (true) {
      int tag = input.readTag();
      switch (tag) {
        case 0:
          return this;
        default: {
          if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
            return this;
          }
          break;
        }
        case 10: {
          this.version = input.readString();
          break;
        }
        case 16: {
          this.versionInt = input.readInt32();
          break;
        }
        case 24: {
          this.androidVersion = input.readInt32();
          break;
        }
        case 34: {
          if (this.proc == null) {
            this.proc = new com.google.android.diskusage.proto.PortableStreamProto();
          }
          input.readMessage(this.proc);
          break;
        }
        case 42: {
          int arrayLength = com.google.protobuf.nano.WireFormatNano
              .getRepeatedFieldArrayLength(input, 42);
          int i = this.appInfo == null ? 0 : this.appInfo.length;
          com.google.android.diskusage.proto.AppInfoProto[] newArray =
              new com.google.android.diskusage.proto.AppInfoProto[i + arrayLength];
          if (i != 0) {
            java.lang.System.arraycopy(this.appInfo, 0, newArray, 0, i);
          }
          for (; i < newArray.length - 1; i++) {
            newArray[i] = new com.google.android.diskusage.proto.AppInfoProto();
            input.readMessage(newArray[i]);
            input.readTag();
          }
          // Last one without readTag.
          newArray[i] = new com.google.android.diskusage.proto.AppInfoProto();
          input.readMessage(newArray[i]);
          this.appInfo = newArray;
          break;
        }
        case 50: {
          int arrayLength = com.google.protobuf.nano.WireFormatNano
              .getRepeatedFieldArrayLength(input, 50);
          int i = this.statFs == null ? 0 : this.statFs.length;
          com.google.android.diskusage.proto.StatFsProto[] newArray =
              new com.google.android.diskusage.proto.StatFsProto[i + arrayLength];
          if (i != 0) {
            java.lang.System.arraycopy(this.statFs, 0, newArray, 0, i);
          }
          for (; i < newArray.length - 1; i++) {
            newArray[i] = new com.google.android.diskusage.proto.StatFsProto();
            input.readMessage(newArray[i]);
            input.readTag();
          }
          // Last one without readTag.
          newArray[i] = new com.google.android.diskusage.proto.StatFsProto();
          input.readMessage(newArray[i]);
          this.statFs = newArray;
          break;
        }
        case 66: {
          if (this.externalFilesDir == null) {
            this.externalFilesDir = new com.google.android.diskusage.proto.PortableFileProto();
          }
          input.readMessage(this.externalFilesDir);
          break;
        }
        case 74: {
          int arrayLength = com.google.protobuf.nano.WireFormatNano
              .getRepeatedFieldArrayLength(input, 74);
          int i = this.externalFilesDirs == null ? 0 : this.externalFilesDirs.length;
          com.google.android.diskusage.proto.PortableFileProto[] newArray =
              new com.google.android.diskusage.proto.PortableFileProto[i + arrayLength];
          if (i != 0) {
            java.lang.System.arraycopy(this.externalFilesDirs, 0, newArray, 0, i);
          }
          for (; i < newArray.length - 1; i++) {
            newArray[i] = new com.google.android.diskusage.proto.PortableFileProto();
            input.readMessage(newArray[i]);
            input.readTag();
          }
          // Last one without readTag.
          newArray[i] = new com.google.android.diskusage.proto.PortableFileProto();
          input.readMessage(newArray[i]);
          this.externalFilesDirs = newArray;
          break;
        }
        case 82: {
          if (this.externalStorageDirectory == null) {
            this.externalStorageDirectory = new com.google.android.diskusage.proto.PortableFileProto();
          }
          input.readMessage(this.externalStorageDirectory);
          break;
        }
        case 88: {
          this.isDeviceRooted = input.readBool();
          break;
        }
        case 98: {
          int arrayLength = com.google.protobuf.nano.WireFormatNano
              .getRepeatedFieldArrayLength(input, 98);
          int i = this.nativeScan == null ? 0 : this.nativeScan.length;
          com.google.android.diskusage.proto.NativeScanProto[] newArray =
              new com.google.android.diskusage.proto.NativeScanProto[i + arrayLength];
          if (i != 0) {
            java.lang.System.arraycopy(this.nativeScan, 0, newArray, 0, i);
          }
          for (; i < newArray.length - 1; i++) {
            newArray[i] = new com.google.android.diskusage.proto.NativeScanProto();
            input.readMessage(newArray[i]);
            input.readTag();
          }
          // Last one without readTag.
          newArray[i] = new com.google.android.diskusage.proto.NativeScanProto();
          input.readMessage(newArray[i]);
          this.nativeScan = newArray;
          break;
        }
        case 106: {
          if (this.legacyScan == null) {
            this.legacyScan = new com.google.android.diskusage.proto.LegacyScan();
          }
          input.readMessage(this.legacyScan);
          break;
        }
      }
    }
  }

  public static Dump parseFrom(byte[] data)
      throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
    return com.google.protobuf.nano.MessageNano.mergeFrom(new Dump(), data);
  }

  public static Dump parseFrom(
          com.google.protobuf.nano.CodedInputByteBufferNano input)
      throws java.io.IOException {
    return new Dump().mergeFrom(input);
  }
}
